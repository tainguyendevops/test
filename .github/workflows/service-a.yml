name: Build production container

on:
  # release:
  #  types:
  #    - created
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
    branches:
      - refs/tags/*
      - release/*
      - hotfix/*
      - develop
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: Who to greet
        options: 
        - monalisa
        - cschleiden
      message:
        required: true
      use-emoji:
        type: boolean
        description: Include  emojis
      environment:
        type: environment
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
    branches:
      - refs/tags/*
      - hotfix/*
      - release/*
      - develop

env:
  NAME_SERVICE: service_a
  IMAGE_TAG_LATEST: latest
  DOCKER_BUILDKIT: 1
  DEPLOYMENTS: true

concurrency:
  group: ${{ github.ref }}-${{ github.run_id }}

jobs:
  build-dev:
    if: startsWith(github.ref, 'refs/heads/develop')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Pre-check step and set env
        run: echo "${GITHUB_REF#refs/tags/}, test ${GITHUB_REF}"

      - name: Pre-check step and set env dev
        id: get_current_env_dev
        if: ${{ github.event.ref == 'refs/heads/develop' }}
        run: |
          if [[ ${{ github.event.ref }} == 'refs/heads/develop' ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
            echo "CURRENT_ENV=dev" >> "$GITHUB_ENV"
            echo "PROJECT_FOLDER=${GITHUB_REPOSITORY#onpointvn/}" >> "$GITHUB_ENV"
            echo "[INFO] PASSED pre-check. Using build automatically"
            echo "[INFO] PASSED pre-check. Using build automatically"
            exit 0
          fi

      - name: Get Tag Name
        run: echo "VERSION ${{ env.VERSION }} - $GITHUB_REF_NAME"
      - name: Get Target Name Branch
        run: echo "Get Target Name Branch ${{ github.event.release.target_commitish }}"

  deploy-dev:
    if: startsWith(github.ref, 'refs/heads/develop')
    runs-on: ubuntu-latest
    needs: build-dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Pre-check step and set env
        run: echo "${GITHUB_REF#refs/tags/}, test ${GITHUB_REF}"

      - name: Pre-check step and set env dev
        id: get_current_env_dev
        if: ${{ github.event.ref == 'refs/heads/develop' }}
        run: |
          if [[ ${{ github.event.ref }} == 'refs/heads/develop' ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
            echo "CURRENT_ENV=dev" >> "$GITHUB_ENV"
            echo "PROJECT_FOLDER=${GITHUB_REPOSITORY#onpointvn/}" >> "$GITHUB_ENV"
            echo "[INFO] PASSED pre-check. Using build automatically"
            echo "[INFO] PASSED pre-check. Using build automatically"
            exit 0
          else
            echo "[ERR] You are not allowed to run pipeline"
            echo "[ERR] Your action has been reported to your admin"
            exit 1
          fi

      - name: Get Tag Name
        run: echo "VERSION ${{ env.VERSION }} - $GITHUB_REF_NAME"

      - name: Get Target Name Branch
        run: echo "Get Target Name Branch ${{ github.event.release.target_commitish }}"

  build-stg:
    if: startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Pre-check step and set env stg
        id: get_current_env_stg
        if: startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/')
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/heads/release/[0-9]+$ ]] || [[ ${{ github.event.ref }} =~ ^refs/heads/hotfix/v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
            echo "CURRENT_ENV=stg" >> "$GITHUB_ENV"
            echo "PROJECT_FOLDER=${GITHUB_REPOSITORY#onpointvn/}" >> "$GITHUB_ENV"
            echo "[INFO] PASSED pre-check. Using build automatically"
            echo "[INFO] PASSED pre-check. Using build automatically"
            exit 0
          fi

      - name: Pre-check step and set env
        run: echo "${GITHUB_REF#refs/tags/}, test ${GITHUB_REF}, VERSION ${VERSION}, ${CURRENT_ENV}"

      - name: Get Tag Name
        run: echo "VERSION ${{ env.VERSION }} - $GITHUB_REF_NAME"

      - name: Get Target Name Branch
        run: echo "Get Target Name Branch ${{ github.event.release.target_commitish }}"

  deploy-stg:
    if: startsWith(github.ref, 'refs/heads/release/') && startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    needs: build-stg
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Pre-check step and set env stg
        id: get_current_env_stg
        if: startsWith(github.ref, 'refs/heads/release/') && startsWith(github.ref, 'refs/heads/hotfix/')
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/heads/release/[0-9]+$ ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
            echo "CURRENT_ENV=stg" >> "$GITHUB_ENV"
            echo "PROJECT_FOLDER=${GITHUB_REPOSITORY#onpointvn/}" >> "$GITHUB_ENV"
            echo "[INFO] PASSED pre-check. Using build automatically"
            echo "[INFO] PASSED pre-check. Using build automatically"
            exit 0
          else
            echo "[ERR] You are not allowed to run pipeline"
            echo "[ERR] Your action has been reported to your admin"
            exit 1
          fi

      - name: Get Tag Name
        run: echo "VERSION ${{ env.VERSION }} - $GITHUB_REF_NAME"
      - name: Get Target Name Branch
        run: echo "Get Target Name Branch ${{ github.event.release.target_commitish }}, ${{ github.head_ref }}"





  build-prod:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Target Name Branch 01
        run: echo "Get Target Name Branch ${GITHUB_BASE_REF}, $GITHUB_BASE_REF ${{ env.GITHUB_BASE_REF }}, ${{ github.event.pull_request.base.ref }}, ${{ github.pull_request.base.ref }}"

      - name: Pre-check step and set env prod hotfix
        if: startsWith(github.ref, 'refs/tags/v')
        id: get_current_env_prod_hotfix
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+.*$ ]] && [[ ${{ github.event.base_ref }} =~ ^refs/heads/main ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
            echo "CURRENT_ENV=stg" >> "$GITHUB_ENV"
            echo "PROJECT_FOLDER=${GITHUB_REPOSITORY#onpointvn/}" >> "$GITHUB_ENV"
            echo "[INFO] PASSED pre-check. Using build automatically branch release"
            exit 0
          fi

      - name: Pre-check step and set env prod release
        if: startsWith(github.ref, 'refs/tags/v')
        id: get_current_env_prod_release
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+.*$ ]] && [[ ${{ github.event.base_ref }} =~ ^refs/heads/hotfix/v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
            echo "CURRENT_ENV=stg" >> "$GITHUB_ENV"
            echo "PROJECT_FOLDER=${GITHUB_REPOSITORY#onpointvn/}" >> "$GITHUB_ENV"
            echo "[INFO] PASSED pre-check. Using build automatically branch release"
            exit 0
          fi

      - name: Get Target Name Branch 02
        if: ${{ env.DEPLOYMENTS == 'true' }} && startsWith(github.base_ref, 'refs/heads/main')
        run: echo "Get Target Name Branch ${{ github.event.release }}, ${{ github.release }}, ${{ github.head_ref }}, ${{ github.event.head_ref }} , ${{ github.base_ref }}, ${{ github.event.base_ref }}, ${{ github.event.ref }}"
      - name: Test tag 01
        if: startsWith(github.ref, 'refs/tags/v') && ${{ env.DEPLOYMENTS == 'true' }} && startsWith(github.base_ref, 'refs/heads/main')
        run: echo "Master release ${{ github.event.release.name }}, ${{ github.head_ref }}"

  deploy-prod:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build-prod
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Pre-check step and set env
        run: echo "${GITHUB_REF#refs/tags/}, test ${GITHUB_REF}"
        
      - name: Pre-check step and set env prod
        id: get_current_env_prod
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
            echo "CURRENT_ENV=prod" >> "$GITHUB_ENV"
            echo "PROJECT_FOLDER=${GITHUB_REPOSITORY#onpointvn/}" >> "$GITHUB_ENV"
            echo "[INFO] PASSED pre-check. Using build automatically"
            exit 0
          else
            echo "[ERR] You are not allowed to run pipeline"
            echo "[ERR] Your action has been reported to your admin"
            exit 1
          fi
      - name: Get Target Name Branch
        run: echo "Get Target Name Branch ${{ github.event.release.target_commitish }}"
      - name: Do something
        run: echo "Master release ${{ github.event.release.name }}, ${{ github.head_ref }}"
      - name: Do something Master release
        run: echo "Master release ${{ github.event.release }}, 1 ${{ github.event.payload.release.name }}, 2 ${{ github.event.payload.release }}, 3 ${{ github.event.payload }}, ${{ github.head_ref }}"
      - name: Do something Master release 01
        run: echo "Name ${{ github.event.release.name }} Description ${{ github.event.release.body }}, ${{ github.head_ref }}"


      - name: Test tag 01
        if: startsWith(github.ref, 'refs/tags/v') && ${{ env.DEPLOYMENTS == 'true' }}
        run: echo "Master release ${{ github.event.release.name }}, ${{ github.head_ref }}"
      - name: Test tag 01
        if: startsWith(github.ref, 'refs/tags/v') && ${{ env.DEPLOYMENTS == 'true' }}
        run: echo "Master release ${{ github.event.release.name }}, ${{ github.head_ref }}"


      - name: ingress to rke
        if: ${{ (github.event.ref =~ 'refs/tags/v') && (env.DEPLOYMENTS == 'true') }}
        run: echo "Master release ${{ github.event.release.name }}, ${{ github.head_ref }}"
